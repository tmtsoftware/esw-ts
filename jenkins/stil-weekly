pipeline {
    agent {
        label 'master'
    }

    options {
        timeout(time: 2, unit: 'HOURS')
        timestamps()
    }

    stages {
        stage('Checkout') {
            steps {
                sh "git checkout $VERSION"
                sh "git pull"
            }
        }

        stage('Install') {
            steps {
                sh "eval \$(cs java --jvm temurin:1.21.0 --env) && which sbt && sbt --version"
                sh "eval \$(cs java --jvm temurin:1.21.0 --env) && which jps && jps -v"
                sh "eval \$(cs java --jvm temurin:1.21.0 --env) && which java && java --version"
                sh "which cs && cs --version"
                sh "eval \$(cs java --jvm temurin:1.21.0 --env) && sbt clean"
            }
        }

        stage('Paradox validate links') {
            steps {
                sh "eval \$(cs java --jvm temurin:1.21.0 --env) && sbt paradoxValidateLinks"
            }
        }
    }
    post {
        always {
            script {
                sendNotification(currentBuild.result)
            }
        }
    }
}

def sendNotification(String buildStatus = 'STARTED') {
    buildStatus = buildStatus ?: 'SUCCESS'

    def colorCode = '#FF0000'
    def subject = "${buildStatus}: Job '${env.JOB_NAME}' [${env.BUILD_NUMBER}]'"
    def summary = "${subject} (${env.BUILD_URL})"

    // override default values based on build status
    if (buildStatus == 'STARTED') {
        color = 'YELLOW'
        colorCode = '#FFFF00'
    } else if (buildStatus == 'SUCCESS') {
        color = 'GREEN'
        colorCode = '#00FF00'
    } else {
        color = 'RED'
        colorCode = '#FF0000'
    }
    slackSend(channel: "#ci-weekly", color: colorCode, message: summary)
}
